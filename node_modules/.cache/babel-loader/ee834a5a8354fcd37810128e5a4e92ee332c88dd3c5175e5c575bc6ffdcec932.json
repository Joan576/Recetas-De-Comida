{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"success\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Register\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.handleSubmit, [\"prevent\"])\n  }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"Username:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.username = $event),\n    type: \"text\",\n    id: \"username\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.username]])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.email = $event),\n    type: \"email\",\n    id: \"email\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.email]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.password = $event),\n    type: \"password\",\n    id: \"password\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.password]])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"Confirm Password:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.confirmPassword = $event),\n    type: \"password\",\n    id: \"confirmPassword\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.form.confirmPassword]])]), $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.success ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.success), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Mensaje de éxito \"), _cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Register\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","handleSubmit","for","_cache","$event","form","username","type","id","required","email","password","confirmPassword","error","_hoisted_2","_toDisplayString","_createCommentVNode","success","_hoisted_3"],"sources":["C:\\Users\\MEZAS\\OneDrive\\Escritorio\\Trabajos U\\Programacion Web\\Proyecto_Recetas\\recetas_front\\src\\components\\registerForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>Register</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">Username:</label>\r\n        <input v-model=\"form.username\" type=\"text\" id=\"username\" required />\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"email\">Email:</label>\r\n        <input v-model=\"form.email\" type=\"email\" id=\"email\" required />\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"password\">Password:</label>\r\n        <input v-model=\"form.password\" type=\"password\" id=\"password\" required />\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"confirmPassword\">Confirm Password:</label>\r\n        <input v-model=\"form.confirmPassword\" type=\"password\" id=\"confirmPassword\" required />\r\n      </div>\r\n\r\n      <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n      <div v-if=\"success\" class=\"success\">{{ success }}</div> <!-- Mensaje de éxito -->\r\n\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst form = ref({\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n});\r\n\r\nconst error = ref('');\r\nconst success = ref(''); // Variable para el mensaje de éxito\r\n\r\nconst handleSubmit = async () => {\r\n  // Validar que las contraseñas coincidan\r\n  if (form.value.password !== form.value.confirmPassword) {\r\n    error.value = 'Passwords do not match!';\r\n    success.value = ''; // Limpiar mensaje de éxito\r\n    return;\r\n  }\r\n  \r\n  // Limpiar mensajes antes de enviar\r\n  error.value = '';\r\n  success.value = '';\r\n\r\n  try {\r\n    // Hacer la petición POST al backend\r\n    const response = await axios.post('http://localhost:4000/usuarios', {\r\n      username: form.value.username,\r\n      email: form.value.email,\r\n      password: form.value.password,\r\n    });\r\n\r\n    // Manejar la respuesta exitosa\r\n    success.value = response.data.message; // Mostrar mensaje de éxito\r\n    form.value.username = ''; // Limpiar el formulario\r\n    form.value.email = '';\r\n    form.value.password = '';\r\n    form.value.confirmPassword = '';\r\n  } catch (err) {\r\n    // Manejar errores, como problemas con el servidor\r\n    console.error('Error registering user:', err);\r\n    if (err.response && err.response.data && err.response.data.message) {\r\n      error.value = err.response.data.message;\r\n    } else {\r\n      error.value = 'Error .';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n.error {\r\n  color: red;\r\n}\r\n.success {\r\n  color: green; /* Estilo para el mensaje de éxito */\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EADjCC,GAAA;EAwBwBD,KAAK,EAAC;;;EAxB9BC,GAAA;EAyB0BD,KAAK,EAAC;;;uBAxB9BE,mBAAA,CA4BM,OA5BNC,UA4BM,G,0BA3BJC,mBAAA,CAAiB,YAAb,UAAQ,sBACZA,mBAAA,CAyBO;IAzBAC,QAAM,EAHjBC,cAAA,CAG2BC,MAAA,CAAAC,YAAY;MACjCJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAuC;IAAhCK,GAAG,EAAC;EAAU,GAAC,WAAS,sB,gBAC/BL,mBAAA,CAAoE;IAN5E,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMwBJ,MAAA,CAAAK,IAAI,CAACC,QAAQ,GAAAF,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAAzCT,MAAA,CAAAK,IAAI,CAACC,QAAQ,E,KAG/BT,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1BK,GAAG,EAAC;EAAO,GAAC,QAAM,sB,gBACzBL,mBAAA,CAA+D;IAXvE,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWwBJ,MAAA,CAAAK,IAAI,CAACK,KAAK,GAAAN,MAAA;IAAEG,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IAACC,QAAQ,EAAR;iDAApCT,MAAA,CAAAK,IAAI,CAACK,KAAK,E,KAG5Bb,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAuC;IAAhCK,GAAG,EAAC;EAAU,GAAC,WAAS,sB,gBAC/BL,mBAAA,CAAwE;IAhBhF,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBwBJ,MAAA,CAAAK,IAAI,CAACM,QAAQ,GAAAP,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAACC,QAAQ,EAAR;iDAA7CT,MAAA,CAAAK,IAAI,CAACM,QAAQ,E,KAG/Bd,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAsD;IAA/CK,GAAG,EAAC;EAAiB,GAAC,mBAAiB,sB,gBAC9CL,mBAAA,CAAsF;IArB9F,uBAAAM,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBwBJ,MAAA,CAAAK,IAAI,CAACO,eAAe,GAAAR,MAAA;IAAEG,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,iBAAiB;IAACC,QAAQ,EAAR;iDAA3DT,MAAA,CAAAK,IAAI,CAACO,eAAe,E,KAG3BZ,MAAA,CAAAa,KAAK,I,cAAhBlB,mBAAA,CAAiD,OAAjDmB,UAAiD,EAAAC,gBAAA,CAAdf,MAAA,CAAAa,KAAK,oBAxB9CG,mBAAA,gBAyBiBhB,MAAA,CAAAiB,OAAO,I,cAAlBtB,mBAAA,CAAuD,OAAvDuB,UAAuD,EAAAH,gBAAA,CAAhBf,MAAA,CAAAiB,OAAO,oBAzBpDD,mBAAA,gBAyB8DA,mBAAA,sBAAyB,E,0BAEjFnB,mBAAA,CAAuC;IAA/BU,IAAI,EAAC;EAAQ,GAAC,UAAQ,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}