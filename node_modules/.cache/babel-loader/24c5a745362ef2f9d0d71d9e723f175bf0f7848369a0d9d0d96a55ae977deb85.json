{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  __name: 'registerForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const form = ref({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const error = ref('');\n    const success = ref(''); // Variable para el mensaje de éxito\n\n    const handleSubmit = async () => {\n      // Validar que las contraseñas coincidan\n      if (form.value.password !== form.value.confirmPassword) {\n        error.value = 'Las contraseñas no coinciden!';\n        success.value = ''; // Limpiar mensaje de éxito\n        return;\n      }\n\n      // Limpiar mensajes antes de enviar\n      error.value = '';\n      success.value = '';\n      try {\n        // Hacer la petición POST al backend\n        const response = await axios.post('http://localhost:4000/usuarios', {\n          username: form.value.username,\n          email: form.value.email,\n          password: form.value.password\n        });\n\n        // Manejar la respuesta exitosa\n        success.value = response.data.message; // Mostrar mensaje de éxito\n        form.value.username = ''; // Limpiar el formulario\n        form.value.email = '';\n        form.value.password = '';\n        form.value.confirmPassword = '';\n      } catch (err) {\n        // Manejar errores, como problemas con el servidor\n        console.error('Error registering user:', err);\n        if (err.response && err.response.data && err.response.data.message) {\n          error.value = err.response.data.message;\n        } else {\n          error.value = 'Hubo un error con el registro. Intentalo de nuevo.';\n        }\n      }\n    };\n    const __returned__ = {\n      form,\n      error,\n      success,\n      handleSubmit,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","form","username","email","password","confirmPassword","error","success","handleSubmit","value","response","post","data","message","err","console"],"sources":["C:/Users/MEZAS/OneDrive/Escritorio/Trabajos U/Programacion Web/Proyecto_Recetas/recetas_front/src/components/registerForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>Registro</h2>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <div>\r\n        <label for=\"username\">Nombre de Usuario:</label>\r\n        <input v-model=\"form.username\" type=\"text\" id=\"username\" required />\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"email\">Correo Electronico:</label>\r\n        <input v-model=\"form.email\" type=\"email\" id=\"email\" required />\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"password\">Contraseña:</label>\r\n        <input v-model=\"form.password\" type=\"password\" id=\"password\" required />\r\n      </div>\r\n\r\n      <div>\r\n        <label for=\"confirmPassword\">Confirmar Contraseña:</label>\r\n        <input v-model=\"form.confirmPassword\" type=\"password\" id=\"confirmPassword\" required />\r\n      </div>\r\n\r\n      <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n      <div v-if=\"success\" class=\"success\">{{ success }}</div> <!-- Mensaje de éxito -->\r\n\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst form = ref({\r\n  username: '',\r\n  email: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n});\r\n\r\nconst error = ref('');\r\nconst success = ref(''); // Variable para el mensaje de éxito\r\n\r\nconst handleSubmit = async () => {\r\n  // Validar que las contraseñas coincidan\r\n  if (form.value.password !== form.value.confirmPassword) {\r\n    error.value = 'Las contraseñas no coinciden!';\r\n    success.value = ''; // Limpiar mensaje de éxito\r\n    return;\r\n  }\r\n  \r\n  // Limpiar mensajes antes de enviar\r\n  error.value = '';\r\n  success.value = '';\r\n\r\n  try {\r\n    // Hacer la petición POST al backend\r\n    const response = await axios.post('http://localhost:4000/usuarios', {\r\n      username: form.value.username,\r\n      email: form.value.email,\r\n      password: form.value.password,\r\n    });\r\n\r\n    // Manejar la respuesta exitosa\r\n    success.value = response.data.message; // Mostrar mensaje de éxito\r\n    form.value.username = ''; // Limpiar el formulario\r\n    form.value.email = '';\r\n    form.value.password = '';\r\n    form.value.confirmPassword = '';\r\n  } catch (err) {\r\n    // Manejar errores, como problemas con el servidor\r\n    console.error('Error registering user:', err);\r\n    if (err.response && err.response.data && err.response.data.message) {\r\n      error.value = err.response.data.message;\r\n    } else {\r\n      error.value = 'Hubo un error con el registro. Intentalo de nuevo.';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n.error {\r\n  color: red;\r\n}\r\n.success {\r\n  color: green; /* Estilo para el mensaje de éxito */\r\n}\r\n</style>\r\n"],"mappings":"AAiCA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,IAAI,GAAGF,GAAG,CAAC;MACfG,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGP,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMQ,OAAO,GAAGR,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEzB,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B;MACA,IAAIP,IAAI,CAACQ,KAAK,CAACL,QAAQ,KAAKH,IAAI,CAACQ,KAAK,CAACJ,eAAe,EAAE;QACtDC,KAAK,CAACG,KAAK,GAAG,+BAA+B;QAC7CF,OAAO,CAACE,KAAK,GAAG,EAAE,CAAC,CAAC;QACpB;MACF;;MAEA;MACAH,KAAK,CAACG,KAAK,GAAG,EAAE;MAChBF,OAAO,CAACE,KAAK,GAAG,EAAE;MAElB,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,gCAAgC,EAAE;UAClET,QAAQ,EAAED,IAAI,CAACQ,KAAK,CAACP,QAAQ;UAC7BC,KAAK,EAAEF,IAAI,CAACQ,KAAK,CAACN,KAAK;UACvBC,QAAQ,EAAEH,IAAI,CAACQ,KAAK,CAACL;QACvB,CAAC,CAAC;;QAEF;QACAG,OAAO,CAACE,KAAK,GAAGC,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CAAC;QACvCZ,IAAI,CAACQ,KAAK,CAACP,QAAQ,GAAG,EAAE,CAAC,CAAC;QAC1BD,IAAI,CAACQ,KAAK,CAACN,KAAK,GAAG,EAAE;QACrBF,IAAI,CAACQ,KAAK,CAACL,QAAQ,GAAG,EAAE;QACxBH,IAAI,CAACQ,KAAK,CAACJ,eAAe,GAAG,EAAE;MACjC,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZ;QACAC,OAAO,CAACT,KAAK,CAAC,yBAAyB,EAAEQ,GAAG,CAAC;QAC7C,IAAIA,GAAG,CAACJ,QAAQ,IAAII,GAAG,CAACJ,QAAQ,CAACE,IAAI,IAAIE,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;UAClEP,KAAK,CAACG,KAAK,GAAGK,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAACC,OAAO;QACzC,CAAC,MAAM;UACLP,KAAK,CAACG,KAAK,GAAG,oDAAoD;QACpE;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}